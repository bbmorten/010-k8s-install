---
# deploy-docker-config.yaml
# Usage: ansible-playbook deploy-docker-config.yaml
# Installs Docker Engine on Ubuntu hosts using the official Docker documentation steps

- name: Install Docker Engine on Ubuntu
  hosts: all
  become: true
  gather_facts: true

  vars:
    docker_apt_key_url: https://download.docker.com/linux/ubuntu/gpg
    docker_repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    docker_packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    docker_config_file: /etc/docker/daemon.json
    docker_config_content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }

  tasks:
    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key (binary)
      ansible.builtin.get_url:
        url: "{{ docker_apt_key_url }}"
        dest: /etc/apt/keyrings/docker.gpg
        mode: '0644'
      args:
        headers:
          Accept: application/octet-stream

    - name: Add Docker repository
      apt_repository:
        repo: "{{ docker_repo }}"
        state: present
        filename: docker

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker Engine, CLI, and plugins
      apt:
        name: "{{ docker_packages }}"
        state: present

    - name: Ensure Docker service is started and enabled
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Create Docker config directory
      file:
        path: /etc/docker
        state: directory
        mode: '0755'

    - name: Deploy Docker daemon.json config
      copy:
        dest: "{{ docker_config_file }}"
        content: "{{ docker_config_content }}"
        mode: '0644'
      notify: Restart Docker

    - name: Add current user to docker group (optional)
      user:
        name: "{{ ansible_user | default('ubuntu') }}"
        groups: docker
        append: yes
      when: ansible_user is defined

  handlers:
    - name: Restart Docker
      systemd:
        name: docker
        state: restarted
