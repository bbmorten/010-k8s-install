---
# Playbook: update_hosts.yml
# Purpose: Update /etc/hosts files across all VMs to enable hostname resolution

- name: Update /etc/hosts on all virtual machines
  hosts: k8s_cluster
  # Using ansible_become from inventory
  gather_facts: true
  any_errors_fatal: true
  
  pre_tasks:
    - name: Create dynamic hosts entries from inventory
      set_fact:
        hosts_entries: "{{ hosts_entries | default([]) + [{'ip': hostvars[item]['ansible_host'], 'hostname': item}] }}"
      loop: "{{ groups['k8s_cluster'] }}"
      run_once: true
      delegate_to: localhost
  
  tasks:
    - name: Disable cloud-init manage_etc_hosts
      lineinfile:
        path: /etc/cloud/cloud.cfg
        regexp: '^manage_etc_hosts:'
        line: 'manage_etc_hosts: false'
        state: present
      
    - name: Backup original /etc/hosts file
      copy:
        src: /etc/hosts
        dest: /etc/hosts.bak
        remote_src: yes
      
    - name: Ensure base /etc/hosts entries exist
      blockinfile:
        path: /etc/hosts
        create: yes
        block: |
          127.0.1.1 {{ ansible_hostname }} {{ ansible_hostname }}
          127.0.0.1 localhost
          
          # The following lines are desirable for IPv6 capable hosts
          ::1 localhost ip6-localhost ip6-loopback
          ff02::1 ip6-allnodes
          ff02::2 ip6-allrouters
        marker: "# {mark} ANSIBLE MANAGED BLOCK - BASE HOSTS"
    
    - name: Add all cluster hosts to /etc/hosts file
      blockinfile:
        path: /etc/hosts
        block: |
          {% for host in hostvars['localhost']['hosts_entries'] | default(hosts_entries) %}
          {{ host.ip }} {{ host.hostname }}
          {% endfor %}
        marker: "# {mark} ANSIBLE MANAGED BLOCK - CLUSTER HOSTS"
    
    - name: Test hostname resolution
      command: ping -c 1 {{ item.hostname }}
      register: ping_result
      failed_when: ping_result.rc != 0
      loop: "{{ hostvars['localhost']['hosts_entries'] | default(hosts_entries) }}"
      ignore_errors: yes
    
    - name: Show ping results
      debug:
        msg: "Ping test for {{ item.item.hostname }}: {{ 'Success' if item.rc == 0 else 'Failed' }}"
      loop: "{{ ping_result.results }}"