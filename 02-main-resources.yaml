---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-info
  namespace: k8s-test
data:
  cluster-info: |
    This is a test ConfigMap to verify the Kubernetes API is working properly.
    Timestamp: $(date)
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-index
  namespace: k8s-test
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
      <title>Kubernetes Cluster Test</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          margin: 40px;
          line-height: 1.6;
        }
        h1 {
          color: #326ce5;
        }
        .info {
          background-color: #f4f4f4;
          padding: 15px;
          border-radius: 5px;
        }
        .success {
          color: green;
          font-weight: bold;
        }
      </style>
    </head>
    <body>
      <h1>Kubernetes Cluster Test</h1>
      <div class="info">
        <p class="success">✅ If you can see this page, your Kubernetes deployment is working!</p>
        <p>Pod information:</p>
        <ul>
          <li>Pod Name: <b>${HOSTNAME}</b></li>
          <li>Node: <b>${NODE_NAME}</b></li>
          <li>Pod IP: <b>${POD_IP}</b></li>
          <li>Service Account: <b>${SERVICE_ACCOUNT}</b></li>
        </ul>
      </div>
    </body>
    </html>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: entrypoint-script
  namespace: k8s-test
data:
  entrypoint.sh: |
    #!/bin/sh
    set -e
    
    # Generate the HTML with environment variables substituted
    envsubst < /tmp/index-template.html > /usr/share/nginx/html/index.html
    
    # Start nginx in the foreground
    exec nginx -g 'daemon off;'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-test
  namespace: k8s-test
  labels:
    app: nginx-test
spec:
  replicas: 4  # One pod per node (assuming 1 control plane + 3 workers)
  selector:
    matchLabels:
      app: nginx-test
  template:
    metadata:
      labels:
        app: nginx-test
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nginx-test
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: nginx
        image: nginx:stable
        command: ["/bin/sh", "/scripts/entrypoint.sh"]
        ports:
        - containerPort: 80
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: nginx-index
          mountPath: /tmp/index-template.html
          subPath: index.html
        - name: scripts
          mountPath: /scripts
      volumes:
      - name: nginx-index
        configMap:
          name: nginx-index
      - name: scripts
        configMap:
          name: entrypoint-script
          defaultMode: 0755
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-test
  namespace: k8s-test
spec:
  selector:
    app: nginx-test
  ports:
  - port: 80
    targetPort: 80
  type: NodePort
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cluster-test-job
  namespace: k8s-test
spec:
  template:
    spec:
      containers:
      - name: cluster-test
        image: busybox:1.28
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "Testing Kubernetes Cluster Components"
          echo "------------------------------------"
          
          # Check DNS resolution
          echo "Testing DNS..."
          nslookup kubernetes.default.svc.cluster.local
          if [ $? -eq 0 ]; then
            echo "✅ DNS resolution working"
          else
            echo "❌ DNS resolution failed"
          fi
          
          # Check API server connectivity
          echo "Testing API server connectivity..."
          wget -q -O - --timeout=5 --tries=2 https://kubernetes.default.svc.cluster.local/healthz --no-check-certificate
          if [ $? -eq 0 ]; then
            echo "✅ API server connection successful"
          else
            echo "❌ API server connection failed"
          fi
          
          # Check network connectivity inside the cluster
          echo "Testing cluster network..."
          wget -q -O - --timeout=5 --tries=2 http://nginx-test.k8s-test.svc.cluster.local
          if [ $? -eq 0 ]; then
            echo "✅ In-cluster network connections working"
          else
            echo "❌ In-cluster network connections failed"
          fi
          
          echo "All tests completed"
          
      restartPolicy: Never
  backoffLimit: 2